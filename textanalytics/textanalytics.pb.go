// Code generated by protoc-gen-go. DO NOT EDIT.
// source: textanalytics.proto

package textanalytics

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BatchDetectLanguageRequest struct {
	Documents            []*BatchDetectLanguageRequest_Document `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *BatchDetectLanguageRequest) Reset()         { *m = BatchDetectLanguageRequest{} }
func (m *BatchDetectLanguageRequest) String() string { return proto.CompactTextString(m) }
func (*BatchDetectLanguageRequest) ProtoMessage()    {}
func (*BatchDetectLanguageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95bbfc17710757c6, []int{0}
}

func (m *BatchDetectLanguageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchDetectLanguageRequest.Unmarshal(m, b)
}
func (m *BatchDetectLanguageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchDetectLanguageRequest.Marshal(b, m, deterministic)
}
func (m *BatchDetectLanguageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchDetectLanguageRequest.Merge(m, src)
}
func (m *BatchDetectLanguageRequest) XXX_Size() int {
	return xxx_messageInfo_BatchDetectLanguageRequest.Size(m)
}
func (m *BatchDetectLanguageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchDetectLanguageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchDetectLanguageRequest proto.InternalMessageInfo

func (m *BatchDetectLanguageRequest) GetDocuments() []*BatchDetectLanguageRequest_Document {
	if m != nil {
		return m.Documents
	}
	return nil
}

type BatchDetectLanguageRequest_Document struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Text                 string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchDetectLanguageRequest_Document) Reset()         { *m = BatchDetectLanguageRequest_Document{} }
func (m *BatchDetectLanguageRequest_Document) String() string { return proto.CompactTextString(m) }
func (*BatchDetectLanguageRequest_Document) ProtoMessage()    {}
func (*BatchDetectLanguageRequest_Document) Descriptor() ([]byte, []int) {
	return fileDescriptor_95bbfc17710757c6, []int{0, 0}
}

func (m *BatchDetectLanguageRequest_Document) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchDetectLanguageRequest_Document.Unmarshal(m, b)
}
func (m *BatchDetectLanguageRequest_Document) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchDetectLanguageRequest_Document.Marshal(b, m, deterministic)
}
func (m *BatchDetectLanguageRequest_Document) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchDetectLanguageRequest_Document.Merge(m, src)
}
func (m *BatchDetectLanguageRequest_Document) XXX_Size() int {
	return xxx_messageInfo_BatchDetectLanguageRequest_Document.Size(m)
}
func (m *BatchDetectLanguageRequest_Document) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchDetectLanguageRequest_Document.DiscardUnknown(m)
}

var xxx_messageInfo_BatchDetectLanguageRequest_Document proto.InternalMessageInfo

func (m *BatchDetectLanguageRequest_Document) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BatchDetectLanguageRequest_Document) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type DetectedLanguage struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Iso6391Name          string   `protobuf:"bytes,2,opt,name=iso6391name,json=iso6391Name,proto3" json:"iso6391name,omitempty"`
	Score                float64  `protobuf:"fixed64,3,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DetectedLanguage) Reset()         { *m = DetectedLanguage{} }
func (m *DetectedLanguage) String() string { return proto.CompactTextString(m) }
func (*DetectedLanguage) ProtoMessage()    {}
func (*DetectedLanguage) Descriptor() ([]byte, []int) {
	return fileDescriptor_95bbfc17710757c6, []int{1}
}

func (m *DetectedLanguage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectedLanguage.Unmarshal(m, b)
}
func (m *DetectedLanguage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectedLanguage.Marshal(b, m, deterministic)
}
func (m *DetectedLanguage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectedLanguage.Merge(m, src)
}
func (m *DetectedLanguage) XXX_Size() int {
	return xxx_messageInfo_DetectedLanguage.Size(m)
}
func (m *DetectedLanguage) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectedLanguage.DiscardUnknown(m)
}

var xxx_messageInfo_DetectedLanguage proto.InternalMessageInfo

func (m *DetectedLanguage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DetectedLanguage) GetIso6391Name() string {
	if m != nil {
		return m.Iso6391Name
	}
	return ""
}

func (m *DetectedLanguage) GetScore() float64 {
	if m != nil {
		return m.Score
	}
	return 0
}

type BatchDetectLanguageResponse struct {
	Documents            []*BatchDetectLanguageResponse_Document `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *BatchDetectLanguageResponse) Reset()         { *m = BatchDetectLanguageResponse{} }
func (m *BatchDetectLanguageResponse) String() string { return proto.CompactTextString(m) }
func (*BatchDetectLanguageResponse) ProtoMessage()    {}
func (*BatchDetectLanguageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95bbfc17710757c6, []int{2}
}

func (m *BatchDetectLanguageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchDetectLanguageResponse.Unmarshal(m, b)
}
func (m *BatchDetectLanguageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchDetectLanguageResponse.Marshal(b, m, deterministic)
}
func (m *BatchDetectLanguageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchDetectLanguageResponse.Merge(m, src)
}
func (m *BatchDetectLanguageResponse) XXX_Size() int {
	return xxx_messageInfo_BatchDetectLanguageResponse.Size(m)
}
func (m *BatchDetectLanguageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchDetectLanguageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchDetectLanguageResponse proto.InternalMessageInfo

func (m *BatchDetectLanguageResponse) GetDocuments() []*BatchDetectLanguageResponse_Document {
	if m != nil {
		return m.Documents
	}
	return nil
}

type BatchDetectLanguageResponse_Document struct {
	Id                   string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DetectLanguages      []*DetectedLanguage `protobuf:"bytes,2,rep,name=detect_languages,json=detectedLanguages,proto3" json:"detect_languages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *BatchDetectLanguageResponse_Document) Reset()         { *m = BatchDetectLanguageResponse_Document{} }
func (m *BatchDetectLanguageResponse_Document) String() string { return proto.CompactTextString(m) }
func (*BatchDetectLanguageResponse_Document) ProtoMessage()    {}
func (*BatchDetectLanguageResponse_Document) Descriptor() ([]byte, []int) {
	return fileDescriptor_95bbfc17710757c6, []int{2, 0}
}

func (m *BatchDetectLanguageResponse_Document) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchDetectLanguageResponse_Document.Unmarshal(m, b)
}
func (m *BatchDetectLanguageResponse_Document) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchDetectLanguageResponse_Document.Marshal(b, m, deterministic)
}
func (m *BatchDetectLanguageResponse_Document) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchDetectLanguageResponse_Document.Merge(m, src)
}
func (m *BatchDetectLanguageResponse_Document) XXX_Size() int {
	return xxx_messageInfo_BatchDetectLanguageResponse_Document.Size(m)
}
func (m *BatchDetectLanguageResponse_Document) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchDetectLanguageResponse_Document.DiscardUnknown(m)
}

var xxx_messageInfo_BatchDetectLanguageResponse_Document proto.InternalMessageInfo

func (m *BatchDetectLanguageResponse_Document) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BatchDetectLanguageResponse_Document) GetDetectLanguages() []*DetectedLanguage {
	if m != nil {
		return m.DetectLanguages
	}
	return nil
}

func init() {
	proto.RegisterType((*BatchDetectLanguageRequest)(nil), "textanalytics.BatchDetectLanguageRequest")
	proto.RegisterType((*BatchDetectLanguageRequest_Document)(nil), "textanalytics.BatchDetectLanguageRequest.Document")
	proto.RegisterType((*DetectedLanguage)(nil), "textanalytics.DetectedLanguage")
	proto.RegisterType((*BatchDetectLanguageResponse)(nil), "textanalytics.BatchDetectLanguageResponse")
	proto.RegisterType((*BatchDetectLanguageResponse_Document)(nil), "textanalytics.BatchDetectLanguageResponse.Document")
}

func init() { proto.RegisterFile("textanalytics.proto", fileDescriptor_95bbfc17710757c6) }

var fileDescriptor_95bbfc17710757c6 = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xd1, 0x4a, 0xc3, 0x30,
	0x14, 0x86, 0x49, 0xa7, 0xe2, 0xce, 0x50, 0x66, 0xf4, 0xa2, 0xcc, 0x0b, 0x4b, 0xaf, 0x7a, 0x55,
	0x70, 0x05, 0xc1, 0x5b, 0xd9, 0xe5, 0x10, 0xcd, 0x03, 0x28, 0x31, 0x39, 0x6c, 0x85, 0x2d, 0x99,
	0x3b, 0xa7, 0xa0, 0x2f, 0xe3, 0x83, 0xf9, 0x34, 0xd2, 0xb4, 0x45, 0x56, 0xa7, 0x78, 0x77, 0xf2,
	0xe7, 0xfc, 0xdf, 0x4f, 0xfe, 0xc0, 0x39, 0xe3, 0x1b, 0x6b, 0xa7, 0x57, 0xef, 0x5c, 0x1a, 0xca,
	0x37, 0x5b, 0xcf, 0x5e, 0x9e, 0xec, 0x88, 0xe9, 0x87, 0x80, 0xc9, 0x9d, 0x66, 0xb3, 0x9c, 0x21,
	0xa3, 0xe1, 0xb9, 0x76, 0x8b, 0x4a, 0x2f, 0x50, 0xe1, 0x6b, 0x85, 0xc4, 0xf2, 0x01, 0x86, 0xd6,
	0x9b, 0x6a, 0x8d, 0x8e, 0x29, 0x16, 0xc9, 0x20, 0x1b, 0x4d, 0xa7, 0xf9, 0x2e, 0xf6, 0x77, 0x77,
	0x3e, 0x6b, 0xad, 0xea, 0x1b, 0x32, 0xc9, 0xe1, 0xb8, 0x93, 0xe5, 0x29, 0x44, 0xa5, 0x8d, 0x45,
	0x22, 0xb2, 0xa1, 0x8a, 0x4a, 0x2b, 0x25, 0x1c, 0xd4, 0xec, 0x38, 0x0a, 0x4a, 0x98, 0xd3, 0x27,
	0x18, 0x37, 0x70, 0xb4, 0x1d, 0xbe, 0xde, 0x73, 0x7a, 0x8d, 0xad, 0x33, 0xcc, 0x32, 0x81, 0x51,
	0x49, 0xfe, 0xa6, 0xb8, 0xbd, 0x0e, 0x57, 0x0d, 0xa2, 0x93, 0xee, 0xeb, 0x8d, 0x0b, 0x38, 0x24,
	0xe3, 0xb7, 0x18, 0x0f, 0x12, 0x91, 0x09, 0xd5, 0x1c, 0xd2, 0x4f, 0x01, 0x97, 0x7b, 0x9f, 0x40,
	0x1b, 0xef, 0x08, 0xe5, 0xe3, 0xcf, 0x06, 0x8a, 0xff, 0x34, 0xd0, 0xd8, 0xf7, 0x56, 0xb0, 0xfc,
	0xa3, 0x82, 0x39, 0x8c, 0x6d, 0x20, 0x3d, 0xaf, 0x5a, 0x14, 0xc5, 0x51, 0x48, 0xbd, 0xea, 0xa5,
	0xf6, 0x5b, 0x51, 0x67, 0xb6, 0xa7, 0xd0, 0xcb, 0x51, 0xf8, 0xf3, 0xe2, 0x2b, 0x00, 0x00, 0xff,
	0xff, 0x1a, 0xe5, 0x48, 0x13, 0x0a, 0x02, 0x00, 0x00,
}
